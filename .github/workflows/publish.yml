name: rsql-querydsl

on: [push, pull_request]

env:
  OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
  OSSRH_TOKEN: ${{ secrets.OSSRH_TOKEN }}
  OSSRH_GPG_SECRET_ID: ${{ secrets.OSSRH_GPG_SECRET_ID }}
  OSSRH_GPG_SECRET_PASSWORD: ${{ secrets.OSSRH_GPG_SECRET_PASSWORD }}

jobs:
  build:
    runs-on: ubuntu-latest

    if: startsWith(github.event.head_commit.message, 'bumped version to ') != true

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8

    - name: Cache dependencies
      uses: actions/cache@v1
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
        restore-keys: ${{ runner.os }}-gradle-

    - name: Prepare to build
      run: chmod +x ./gradlew

    - name: Build project
      run: ./gradlew build -x test

  test:
    needs: [build]
    runs-on: ubuntu-latest

    if: startsWith(github.event.head_commit.message, 'bumped version to ') != true

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8

    - name: Cache dependencies
      uses: actions/cache@v1
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
        restore-keys: ${{ runner.os }}-gradle-

    - name: Prepare to build
      run: chmod +x ./gradlew

    - name: Run tests
      run: ./gradlew check test -S

  deploy_snapshot:
    needs: [build, test]
    runs-on: ubuntu-latest

    if: (github.ref == 'refs/heads/master') && startsWith(github.event.head_commit.message, 'bumped version to ') != true && startsWith(github.event.head_commit.message, 'release:') != true

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8

    - name: Cache dependencies
      uses: actions/cache@v1
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
        restore-keys: ${{ runner.os }}-gradle-

    - name: Prepare to build
      run: chmod +x ./gradlew

    - id: install-secret-key
      name: Install gpg secret key
      run: echo "${{ secrets.OSSRH_GPG_SECRET_KEY }}" | base64 -d > ./secret.gpg

    - id: publish
      name: Publish snapshot
      run: |
        newVersion=`./gradlew derive --preRelease='SNAPSHOT' -i | grep 'NEXT_VERSION:==' | sed 's/^.*NEXT_VERSION:==//g'`

        echo "newVersion: ${newVersion}"

        ./gradlew setNewVersion -P newVersion=${newVersion} 1>/dev/null 2>/dev/null
        ./gradlew clean publish -x test -P OSSRH_GPG_SECRET_KEY=./secret.gpg

        rm -rf ./secret.gpg

  deploy_release:
    needs: [build, test]
    runs-on: ubuntu-latest

    if: startsWith(github.ref, 'refs/tags/') && startsWith(github.event.head_commit.message, 'release')

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8

    - name: Cache dependencies
      uses: actions/cache@v1
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
        restore-keys: ${{ runner.os }}-gradle-

    - name: Prepare to build
      run: chmod +x ./gradlew

    - id: install-secret-key
      name: Install gpg secret key
      run: echo "${{ secrets.OSSRH_GPG_SECRET_KEY }}" | base64 -d > ./secret.gpg

    - name: Publish release
      run: ./gradlew clean publish -x test -P OSSRH_GPG_SECRET_KEY=./secret.gpg
